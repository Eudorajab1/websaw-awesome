from asset.common import asyncer
from asset.rs_vue import v_meth, v_computed, v_watch, RS_vue, V_collector
vc = V_collector()
class App(RS_vue):
    def __init__(self):
        super(vc)
        self.el ='#vue'

    def _init_data(self):
        return {
            items:[],
            input:'',
            api : '/' + window.location.href.split('/')[3] + '/api'
        }

    @vc.meth
    @asyncer
    def load(self):
        res = yield axios.get(self.api)
        self.items = res.data.items

    def created(self):
        self.load()

    @vc.meth
    @asyncer
    def save(self, item_id):
        res = yield axios.post(self.api, {info: self.input})
        if self.input:
            self.items.unshift({id:res.data.id, info: self.input})
        self.input=''

    @vc.meth
    @asyncer
    def remove(self, item_id):
        yield axios.delete(self.api + '/'+ item_id)
        idx = self.items.findIndex(def(it): return it.id == item_id;)
        self.$delete(self.items, idx)

window.app = new Vue(App())